{
  "AWSTemplateFormatVersion": "2010-09-09", 
  "Description": "Stamped CloudFormation Script (v1)", 
  "Outputs": {
    "AZ": {
      "Description": "Availability Zone of the EC2 WebServer instance", 
      "Value": {
        "Fn::GetAtt": [
          "Ec2WebServerInstance", 
          "AvailabilityZone"
        ]
      }
    }, 
    "InstanceId": {
      "Description": "InstanceId of the EC2 WebServer instance", 
      "Value": {
        "Ref": "Ec2WebServerInstance"
      }
    }
  }, 
  "Parameters": {
    "InstanceType": {
      "Default": "m1.small", 
      "Description": "Type of EC2 instance to launch", 
      "Type": "String"
    }, 
    "KeyName": {
      "Default": "test-keypair", 
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance", 
      "Type": "String"
    }, 
    "WebServerPort": {
      "Default": "8888", 
      "Description": "TCP/IP port of the web server", 
      "Type": "String"
    }
  }, 
  "Resources": {
    "1CreateInstance": {
      "DependsOn": "Ec2WebServerInstance", 
      "Properties": {
        "Handle": {
          "Ref": "1CreateInstanceWaitHandle"
        }, 
        "Timeout": "600"
      }, 
      "Type": "AWS::CloudFormation::WaitCondition"
    }, 
    "1CreateInstanceWaitHandle": {
      "Properties": {}, 
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    }, 
    "2CloneRepo": {
      "DependsOn": "Ec2WebServerInstance", 
      "Properties": {
        "Handle": {
          "Ref": "2CloneRepoWaitHandle"
        }, 
        "Timeout": "600"
      }, 
      "Type": "AWS::CloudFormation::WaitCondition"
    }, 
    "2CloneRepoWaitHandle": {
      "Properties": {}, 
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    }, 
    "3RunInit": {
      "DependsOn": "Ec2WebServerInstance", 
      "Properties": {
        "Handle": {
          "Ref": "3RunInitWaitHandle"
        }, 
        "Timeout": "600"
      }, 
      "Type": "AWS::CloudFormation::WaitCondition"
    }, 
    "3RunInitWaitHandle": {
      "Properties": {}, 
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    }, 
    "Ec2WebServerInstance": {
      "Properties": {
        "ImageId": "ami-2ec83147", 
        "InstanceType": "t1.micro", 
        "KeyName": {
          "Ref": "KeyName"
        }, 
        "SecurityGroups": [
          {
            "Ref": "Ec2WebServerSecurityGroup"
          }
        ], 
        "Tags": [
          {
            "Key": "stamped:family", 
            "Value": "WebServer"
          }, 
          {
            "Key": "stamped:server:role", 
            "Value": "API"
          }
        ], 
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "", 
              [
                "#!/bin/bash -ex", 
                "\n", 
                "\n", 
                "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\": \"SUCCESS\", \"Reason\": \"Instance is ready\", \"UniqueId\": \"stamped\", \"Data\": \"Done\"}' \"", 
                {
                  "Ref": "1CreateInstanceWaitHandle"
                }, 
                "\"\n", 
                "", 
                "\n", 
                "    echo '>>>> Create keys for root to connect to GitHub'", 
                "\n", 
                "    echo \"ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAvAzcTXbF0V/Pjja3b2Q9hsBQSHv8R8S6yoESb6CuR5HNzD3rIcfP9r2t3dJnVjeCZKx4JTadGXAr7ysVysGMLgbUMkngJ0bgnqkXPfLnKW07uYsrAF6Q1Gz79RSEIFfQP53p8XKpIkiRnbogM5RG2aIjJobuAsu0J8F9bGL6UfoRv1gGR0VcDbWAnp5SV8iJUBI0ULvVmdKKkFyeVHEZe2zjoplFr4b9jAUwDnNYpWobmsNoC4+1pw5fZRREJ32gCp4iYJIN5eJvylfpbhp6DtKPqrWmCEtIeVkS9pvqgVrlXMiaOPG972FuQJWiC5/iMApUlcTwCcAWkWfRTC4K1w== devbot@stamped.com\" > ~/.ssh/id_rsa.pub", 
                "\n", 
                "    echo \"-----BEGIN RSA PRIVATE KEY-----\" > ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"MIIEogIBAAKCAQEAvAzcTXbF0V/Pjja3b2Q9hsBQSHv8R8S6yoESb6CuR5HNzD3r\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"IcfP9r2t3dJnVjeCZKx4JTadGXAr7ysVysGMLgbUMkngJ0bgnqkXPfLnKW07uYsr\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"AF6Q1Gz79RSEIFfQP53p8XKpIkiRnbogM5RG2aIjJobuAsu0J8F9bGL6UfoRv1gG\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"R0VcDbWAnp5SV8iJUBI0ULvVmdKKkFyeVHEZe2zjoplFr4b9jAUwDnNYpWobmsNo\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"C4+1pw5fZRREJ32gCp4iYJIN5eJvylfpbhp6DtKPqrWmCEtIeVkS9pvqgVrlXMia\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"OPG972FuQJWiC5/iMApUlcTwCcAWkWfRTC4K1wIBIwKCAQAVfdAI2l/AKDT6T2Vr\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"0PEWtuSakdOwbkE7tvrK7crGWc5gfBrfSgkjg2RT3YgnHElql14wI3+rIsMxRsCp\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"dTSXi8B6xp1GUT4+BLIy9zBcgYMrJdkHW0PAgXvhfrADskOvf8L3Bcovzcd/vYAF\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"5Q9pVFvJ44jqYGxcUKCerDnde3fmxRqmZT96NnY2VQcDXJWOs4Z0n5cN5caobZ4Q\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"rFnOa23YbY0EFsUrrl1cFsfxy0LhXWJFIS38SaIQ2RNIxMVgOGvelN6aah1hROn2\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"sYRbiYXpGEIGU6xsOtBY79SAX4NYIhFfJuCACQyQp8Iq+QXolggl0NkK0jY2blNt\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"MiirAoGBAPAjjWUlJVTvRoVIygiWEVNW2uJOjl2MfkO/LgYOzlczpz87QRMEfeBD\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"jz6CyqNCsiJZwW/1tdcjwkpBNPuVIHFHjPTv0VBZ852YTy0Z5vga681VRbNiDP7T\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"Jkltgoft8S4fBYZ/WvFaqhq1Mk/k5hMVLEd8mnVEzCG5NWUTN0gzAoGBAMh4jffy\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"KhuxEnD6bExkTRlYlHmFuQ5TubyPb3EzvrB5maNBmaDHQeAKQECl4V/fBXANENw4\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"94wjx8sQc9/Vo2+5I32VKiHEzlEe7b0lojvS826d27Du4iTzMCp+5t8wJfn6mPu5\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"AqA0aCWZp28utttnvUXORw+mRJp77RI9f97NAoGAUlVVDLxHUFIJjMh/yG33T8YB\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"5zDgWpaRsNPVQ+fRt39sirU64fLpVDRroGdbayzPXDwHzp1i6q0sq76V0pmHd0u7\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"TKn+nzTIjc3SANWuRm+hTbbWEZ3107YbwWdf9BcQ3Jzr85lhAkr4fi9+9tIi/zp1\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"lNpDleuzs8p4tPClPVMCgYEAg7zvlE6t9PC0WN8T96+gYRzz2tQ3x5Ya+EEAFzCh\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"4a7+j9qmyL10bqemkOIJIb5xSaIvpqkXs9z/orMKUUM/g+6w7CAxoSmO5NnPbasE\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"NfEGXqI/6UyF+wY1mETDmfsRpEWXu1xSLsNaYdoAUGCGyrHix3js3mXykWdhRoAv\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"dScCgYEAxOhXQNfCBQPBiVaApYCblNb0ASMh9gQyh5ZVhdcGu84qpTTxt2cIOV2p\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"ylKJVSS3R3bzPw3goGkvFL0e7Mlzr7uwj70pGqw1kXzbe4pLC1GE3PC4QlvPA8lE\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"WCy7/RohwIRd02/7s7UUW118xQYcrT27o/4BJpNd1uWsUT07BgI=\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"-----END RSA PRIVATE KEY-----\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    echo \"\" >> ~/.ssh/id_rsa", 
                "\n", 
                "    ", 
                "\n", 
                "    echo '>>>> Set permissions for keys'", 
                "\n", 
                "    chmod 600 ~/.ssh/id_rsa", 
                "\n", 
                "    chmod 644 ~/.ssh/id_rsa.pub", 
                "\n", 
                "    ", 
                "\n", 
                "    echo '>>>> Install git'", 
                "\n", 
                "    apt-get -y install git-core", 
                "\n", 
                "    ", 
                "\n", 
                "    echo '>>>> Set bash to ignore errors, then run ssh so that clone command ignores validation of URL'", 
                "\n", 
                "    set +e", 
                "\n", 
                "    ssh -o StrictHostKeyChecking=no git@github.com", 
                "\n", 
                "    set -e", 
                "\n", 
                "    ", 
                "\n", 
                "    echo '>>>> Clone repo'", 
                "\n", 
                "    git clone git@github.com:Stamped/stamped-bootstrap.git /bootstrap", 
                "\n", 
                "    ", 
                "\n", 
                "\n", 
                "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\": \"SUCCESS\", \"Reason\": \"Instance is ready\", \"UniqueId\": \"stamped\", \"Data\": \"Done\"}' \"", 
                {
                  "Ref": "2CloneRepoWaitHandle"
                }, 
                "\"\n", 
                "", 
                "\n", 
                "    echo '>>>> Running init script'", 
                "\n", 
                "    bash /bootstrap/init.sh /bootstrap/init.sh &> /bootstrap/log", 
                "\n", 
                "    ", 
                "\n", 
                "\n", 
                "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\": \"SUCCESS\", \"Reason\": \"Instance is ready\", \"UniqueId\": \"stamped\", \"Data\": \"Done\"}' \"", 
                {
                  "Ref": "3RunInitWaitHandle"
                }, 
                "\"\n"
              ]
            ]
          }
        }
      }, 
      "Type": "AWS::EC2::Instance"
    }, 
    "Ec2WebServerSecurityGroup": {
      "Properties": {
        "GroupDescription": "Enable SSH and HTTP access on the inbound port", 
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0", 
            "FromPort": "22", 
            "IpProtocol": "tcp", 
            "ToPort": "22"
          }, 
          {
            "CidrIp": "0.0.0.0/0", 
            "FromPort": {
              "Ref": "WebServerPort"
            }, 
            "IpProtocol": "tcp", 
            "ToPort": {
              "Ref": "WebServerPort"
            }
          }
        ]
      }, 
      "Type": "AWS::EC2::SecurityGroup"
    }
  }
}