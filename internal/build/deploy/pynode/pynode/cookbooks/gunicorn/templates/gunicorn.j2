##
# Gunicorn config at {{ gunicorn.name }}
# Managed by PyNode
##

# What ports/sockets to listen on, and what options for them.
bind = "{{ gunicorn.listen }}"

# The maximum number of pending connections
backlog = {{ gunicorn.backlog  }}

# What the timeout for killing busy workers is, in seconds
timeout = {{ gunicorn.worker_timeout  }}

# How long to wait for requests on a Keep-Alive connection, in seconds
keepalive = {{ gunicorn.worker_keepalive  }}

# The maxium number of requests a worker will process before restarting
max_requests = {{ gunicorn.worker_max_requests  }}

# Whether the app should be pre-loaded
# TODO: capitalize ala {{ @preload_app.to_s.capitalize %}
preload_app = {{ gunicorn.preload_app }}

# How many worker processes
workers = {{ gunicorn.worker_processes  }}

# Type of worker to use
worker_class = "{{ gunicorn.worker_class  }}"

{% if server_hooks['when_ready'] %}
# What to do after the server starts
def def_start_server(server):
    {{ server_hooks['when_ready'] }}

{% endif %}

{% if server_hooks['pre_fork'] %}
# What to do before we fork a worker
def def_pre_fork(server, worker):
    {{ server_hooks['pre_fork'] %}

{% endif %}
{% if server_hooks['post_fork'] %}
# What to do after we fork a worker
def def_post_fork(server, worker):
    {{ server_hooks['post_fork'] %}

{% endif %}

{% if server_hooks['pre_exec'] %}
# What to do before a new master process is forked
def def_pre_exec(server):
    {{ server_hooks['pre_exec'] %}

{% endif %}

{% if server_hooks['pre_request'] %}
# What to do before we process a request
def def_pre_request(worker, req):
    {{ server_hooks['pre_request'] %}

{% endif %}

{% if server_hooks['post_request'] %}
# What to do after we process a request
def def_post_request(worker, req):
    {{ server_hooks['post_request'] %}

{% endif %}

{% if server_hooks['worker_exit'] %}
# What to do after we process a request
def def_worker_exit(server, worker):
    {{ server_hooks['worker_exit'] }}

{% endif %}

{% if pid %}
# Where to drop a pidfile
pidfile = "{{ gunicorn.pid  }}"
{% endif %}

